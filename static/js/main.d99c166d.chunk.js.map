{"version":3,"sources":["Todo/TodoItem.js","Todo/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","todo","index","onChange","classes","completed","push","className","join","type","id","checked","title","TodoList","props","todos","map","onToggle","App","React","useState","setTodos","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAIaA,EAAW,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAChCC,EAAU,GAKd,OAHEH,EAAKI,WACPD,EAAQE,KAAK,QAGX,+BACE,uBAAMC,UAAWH,EAAQI,KAAK,KAA9B,UACE,uBACEC,KAAK,WACLN,SAAU,kBAAMA,EAASF,EAAKS,KAC9BC,QAASV,EAAKI,YAEhB,iCAASH,EAAQ,EAAI,MACpBD,EAAKW,SAGR,wBAAQL,UAAU,KAAlB,sBCjBKM,EAAW,SAACC,GAAD,OACtB,6BACGA,EAAMC,MAAMC,KAAI,SAACf,EAAMC,GAAP,OACf,cAAC,EAAD,CACED,KAAMA,EAENC,MAAOA,EACPC,SAAUW,EAAMG,UAFXhB,EAAKS,UCuBHQ,MA9Bf,WAAgB,IAAD,EAEaC,IAAMC,SAC9B,CACE,CAACV,GAAI,EAAGL,WAAW,EAAOO,MAAO,eACjC,CAACF,GAAI,EAAGL,WAAW,EAAOO,MAAO,qBACjC,CAACF,GAAI,EAAGL,WAAW,EAAOO,MAAO,uBACjC,CAACF,GAAI,EAAGL,WAAW,EAAOO,MAAO,uBAPxB,mBAENG,EAFM,KAECM,EAFD,KAsBb,OACE,sBAAKd,UAAU,UAAf,UACE,gDACA,cAAC,EAAD,CAAUQ,MAAOA,EAAOE,SAd5B,SAAoBP,GAClBW,EACEN,EAAMC,KAAI,SAAAf,GAIR,OAHIA,EAAKS,KAAOA,IACdT,EAAKI,WAAaJ,EAAKI,WAElBJ,aCRAqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d99c166d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoItem.css';\n\nexport const TodoItem = ({ todo, index, onChange }) => {\n  const classes = [];\n\n  if (todo.completed) {\n    classes.push('done');\n  }\n    return (\n      <li>\n        <span className={classes.join(' ')}>\n          <input \n            type=\"checkbox\" \n            onChange={() => onChange(todo.id)} \n            checked={todo.completed}\n          />\n          <strong>{index + 1 + \" \"}</strong>\n          {todo.title}\n        </span>\n\n        <button className='rm'>&times;</button>\n      </li>\n    );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  index: PropTypes.number,\n  onChange: PropTypes.func.isRequired,\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TodoItem } from './TodoItem';\n\nexport const TodoList = (props) => (\n  <ul>\n    {props.todos.map((todo, index) => (\n      <TodoItem \n        todo={todo} \n        key={todo.id} \n        index={index} \n        onChange={props.onToggle}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onToggle: PropTypes.func.isRequired,\n}","import React, { useState } from 'react';\nimport { TodoList } from './Todo/TodoList';\n\nfunction App() {\n  \n  const [todos, setTodos] = React.useState(\n    [\n      {id: 1, completed: false, title: 'lorem ipsum'},\n      {id: 2, completed: false, title: 'qweqwe eerthr rem'},\n      {id: 3, completed: false, title: 'qwsqwswq sqwsqw sum'},\n      {id: 4, completed: false, title: 'lorem dolor ipsum'},\n    ]\n  );\n\n  function toggleTodo(id) {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    )\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <h1>React practice</h1>\n      <TodoList todos={todos} onToggle={toggleTodo}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}