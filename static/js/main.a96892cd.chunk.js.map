{"version":3,"sources":["context.js","Todo/TodoItem.js","Todo/TodoList.js","Loader.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","TodoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","className","join","type","id","checked","title","onClick","bind","TodoList","props","todos","map","onToggle","style","display","justifyContent","margin","AddTodo","lazy","App","useState","setTodos","loading","setLoading","useEffect","fetch","then","response","json","Provider","value","filter","Suspense","fallback","onCreate","concat","Date","now","Loader","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAIeA,G,MAFCC,IAAMC,iB,OCGTC,EAAW,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC9BC,EAAeC,qBAAWR,GAA1BO,WACFE,EAAU,GAKd,OAHEL,EAAKM,WACPD,EAAQE,KAAK,QAGX,+BACE,uBAAMC,UAAWH,EAAQI,KAAK,KAA9B,UACE,uBACEC,KAAK,WACLR,SAAU,kBAAMA,EAASF,EAAKW,KAC9BC,QAASZ,EAAKM,YAEhB,iCAASL,EAAQ,EAAI,MACpBD,EAAKa,SAGR,wBACEL,UAAU,KACVM,QAASX,EAAWY,KAAK,KAAMf,EAAKW,IAFtC,sBCnBKK,EAAW,SAACC,GAAD,OACtB,6BACGA,EAAMC,MAAMC,KAAI,SAACnB,EAAMC,GAAP,OACf,cAAC,EAAD,CACED,KAAMA,EAENC,MAAOA,EACPC,SAAUe,EAAMG,UAFXpB,EAAKW,UCRH,oBACb,qBAAKU,MAAO,CACVC,QAAS,OACTC,eAAgB,SAChBC,OAAQ,SAHV,SAME,sBAAKhB,UAAU,WAAf,UACE,wBACA,wBACA,wBACA,8BCRAiB,EAAU5B,IAAM6B,MAAK,kBAAM,gCA0DlBC,MAxDf,WAAgB,IAAD,EACa9B,IAAM+B,SAAS,IAD5B,mBACNV,EADM,KACCW,EADD,OAEiBhC,IAAM+B,UAAS,GAFhC,mBAENE,EAFM,KAEGC,EAFH,KAoCb,OAhCAC,qBAAU,WACRC,MAAM,uDACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAhB,GACJW,EAASX,GACTa,GAAW,QAEd,IA0BD,cAAC,EAAQM,SAAT,CAAkBC,MAAO,CAAEnC,WAb7B,SAAoBQ,GAClBkB,EAASX,EAAMqB,QAAO,SAAAvC,GAAI,OAAIA,EAAKW,KAAOA,QAY1C,SACE,sBAAKH,UAAU,UAAf,UACE,gDACA,cAAC,IAAMgC,SAAP,CAAgBC,SAAU,2CAA1B,SACE,cAAChB,EAAD,CAASiB,SAbjB,SAAiB7B,GACfgB,EAASX,EAAMyB,OAAO,CAAC,CACrB9B,QACAF,GAAIiC,KAAKC,MACTvC,WAAW,WAYRwB,GAAW,cAACgB,EAAD,IACX5B,EAAM6B,OACL,cAAC,EAAD,CAAU7B,MAAOA,EAAOE,SAjChC,SAAoBT,GAClBkB,EACEX,EAAMC,KAAI,SAAAnB,GAIR,OAHIA,EAAKW,KAAOA,IACdX,EAAKM,WAAaN,EAAKM,WAElBN,UA6BJ8B,GAAW,iDC3CPkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.a96892cd.chunk.js","sourcesContent":["import React from 'react';\n\nconst Context = React.createContext();\n\nexport default Context;","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoItem.css';\nimport Context from '../context';\n\nexport const TodoItem = ({ todo, index, onChange }) => {\n  const { removeTodo } = useContext(Context);\n  const classes = [];\n\n  if (todo.completed) {\n    classes.push('done');\n  }\n    return (\n      <li>\n        <span className={classes.join(' ')}>\n          <input \n            type=\"checkbox\" \n            onChange={() => onChange(todo.id)} \n            checked={todo.completed}\n          />\n          <strong>{index + 1 + \" \"}</strong>\n          {todo.title}\n        </span>\n\n        <button \n          className='rm' \n          onClick={removeTodo.bind(null, todo.id)}\n        >\n          &times;\n        </button>\n      </li>\n    );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  index: PropTypes.number,\n  onChange: PropTypes.func.isRequired,\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TodoItem } from './TodoItem';\n\nexport const TodoList = (props) => (\n  <ul>\n    {props.todos.map((todo, index) => (\n      <TodoItem \n        todo={todo} \n        key={todo.id} \n        index={index} \n        onChange={props.onToggle}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onToggle: PropTypes.func.isRequired,\n}","import React from 'react';\n\nexport default () => (\n  <div style={{\n    display: 'flex',\n    justifyContent: 'center', \n    margin: '.5rem'\n  }}\n  >\n    <div className=\"lds-ring\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </div>\n);","import React, { useEffect } from 'react';\nimport { TodoList } from './Todo/TodoList';\nimport Context from './context';\nimport Loader from './Loader';\n\nconst AddTodo = React.lazy(() => import('./Todo/AddTodo'));\n\nfunction App() {\n  const [todos, setTodos] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\n      .then(response => response.json())\n      .then(todos => {\n        setTodos(todos);\n        setLoading(false);\n      })\n  }, []);\n\n  function toggleTodo(id) {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    )\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  function addTodo(title) {\n    setTodos(todos.concat([{\n      title,\n      id: Date.now(),\n      completed: false,\n    }]));\n  }\n\n  return (\n    <Context.Provider value={{ removeTodo }}>\n      <div className=\"wrapper\">\n        <h1>React practice</h1>\n        <React.Suspense fallback={<p>Loading...</p>}>\n          <AddTodo onCreate={addTodo}/>\n        </React.Suspense>\n\n        {loading && <Loader />}\n        {todos.length ? (\n          <TodoList todos={todos} onToggle={toggleTodo}/>\n        ) : (\n          !loading && <h3>No todos!</h3> \n        )}\n      </div>\n    </Context.Provider>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}